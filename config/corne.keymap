/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        // del/backspace functionality for layer keys
        km: keypress_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEYPRESS_LAYER";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <125>;
            flavor = "hold-preferred";
        };

        // simple caps shift toggle
        cs: caps_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };

        // different homerow mods durations for index vs secondary fingers (pinkies lol)
        hms: homerow_mods_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: homerow_mods_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        // adds tab behavior on semicolon when alt is held down (specifically for use with homerow mods)
        
        // sc_tab: semicolon_tab {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "SEMICOLON_TAB";
        //     #binding-cells = <0>;
        //     bindings = <&kp SEMI>, <&kp TAB>;
        //     mods = <(MOD_LALT|MOD_RALT)>;
        //     keep-mods = <(MOD_LALT)>;
        // };

        // Uses nested hold tap inside of tap dance

        // bth: backspace_tap_raise_hold {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_0";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings =
        //         <&km 2 BSPC>,
        //         <&kp BSPC>;
        // };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |   E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  ;  | BSPC |
            // | CTRL |  A  |  S  |   D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  P  |  '   |
            // | SHFT |  Z  |  X  |   C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | ESC  |
            //                    | BSPC | LWR | SPC |   | ENT | RSE |     |

            label = "moto";
            //元
            bindings = <
  &kp TAB        &kp Q        &kp W         &kp E         &kp R      &kp T      &kp Y         &kp U         &kp I        &kp O     &kp SEMI   &kp BSPC
&kp LCTRL  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hms LSHFT F      &kp G      &kp H  &hms RSHFT J  &hml RCTRL K  &hml LALT L  &hml RGUI P   &kp SQT
      &cs        &kp Z        &kp X         &kp C         &kp V      &kp B      &kp N         &kp M     &kp COMMA      &kp DOT     &kp FSLH   &kp ESC
                                         &hml LGUI BSPC         &km 1 DEL  &kp SPACE    &kp RET          &km 2 BSPC      &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CTRL |     |     |     |     | TAB |   |     |  [  |  ]  |  '  |  ;  |  ~   |
            // | SHFT |  =  |  -  |  +  |  _  | ESC |   |     |     |     |  |  |  \  |  `   |
            //                    |     | n/a | SPC |   | ENT |     |     |

            label = "shita";
            //下
            bindings = <
&kp TAB     &kp N1     &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &kp BSPC
 &trans     &trans     &trans    &trans     &trans    &kp TAB     &trans  &kp LBKT  &kp RBKT   &kp SQT  &kp SEMI  &kp GRAVE
 &trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp UNDER     &kp ESC     &trans    &trans    &trans  &kp PIPE  &kp BSLH  &kp TILDE
                               &trans     &trans  &kp SPACE    &kp RET    &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  F1 |  F2 |  F3 |  F4 |   F5  |   |  F6  |   F7 |  F8 |  F9 |  F10 |   DEL |
            // | CTRL | F11 | F12 |     |     | BTCLR |   | MENU |  LFT |  UP | RGT | PGUP | PSCRN |
            // | SHFT | BT1 | BT2 | BT3 | BT4 |  BT5  |   |      | HOME | DWN | END | PGDN | K_PWR |
            //                    |     |     |  SPC  |   | ENT  |  n/a |     |

            label = "ue";
            //上
            bindings = <
&kp TAB        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5         &kp F6    &kp F7    &kp F8     &kp F9    &kp F10    &kp DEL
 &trans        &kp F11      &kp F12        &trans        &trans    &bt BT_CLR    &kp K_CMENU  &kp LEFT    &kp UP  &kp RIGHT  &kp PG_UP  &kp PSCRN
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans  &kp HOME  &kp DOWN    &kp END  &kp PG_DN  &kp C_PWR
                                         &trans        &trans     &kp SPACE        &kp RET    &trans  &trans
            >;
        };
    };
};
