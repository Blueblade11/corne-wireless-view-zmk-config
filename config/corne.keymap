/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        // del/backspace functionality for layer keys

        km: keypress_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEYPRESS_LAYER";
            bindings =
                <&mo>,
                <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
        };

        // simple caps shift toggle

        cs: caps_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };

        // different homerow mods durations for index vs secondary fingers (pinkies lol)

        hms: homerow_mods_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: homerow_mods_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        // windows explorer shortcut
        f_e: f_e {
            compatible = "zmk,behavior-mod-morph";
            label = "F_E";
            #binding-cells = <0>;
            bindings =
                <&kp F>,
                <&kp E>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        // swap t and g on lctrl
        // t_g: t_g {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "T_G";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp T>,
        //         <&kp G>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };
        // g_t: g_t {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "G_T";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp G>,
        //         <&kp T>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };

        // r to s, p to r, on lctrl
        r_s: r_s {
            compatible = "zmk,behavior-mod-morph";
            label = "R_S";
            #binding-cells = <0>;
            bindings =
                <&kp R>,
                <&kp S>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };
        p_r: p_r {
            compatible = "zmk,behavior-mod-morph";
            label = "P_R";
            #binding-cells = <0>;
            bindings =
                <&kp P>,
                <&kp R>;
            mods = <(MOD_LCTL)>;
            keep-mods = <(MOD_LCTL)>;
        };

        // semi to p on rctrl
        semi_p: semi_p {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_P";
            #binding-cells = <0>;
            bindings =
                <&kp SEMI>,
                <&kp P>;
            mods = <(MOD_RCTL)>;
            keep-mods = <(MOD_RCTL)>;
        };

        // nested mod morph on homerow mod
        // hm_c_tg: homerow_mods_lctrl_tg {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MOD_MORPH_LCTRL_TG";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <150>;
        //     quick-tap-ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings =
        //         <&kp>,
        //         <&t_g>;
        // };
        hm_c_rs: homerow_mods_lctrl_rs {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_MORPH_LCTRL_RS";
            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&r_s>;
        };
        // ht_rp: hold_tap_repeat {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MOD_MORPH_LCTRL_RS";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <210>;
        //     quick-tap-ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings =
        //         <&kp>,
        //         <&r_s>;
        // };
    };

    macros {
        screenshot: screenshot {
            label = "SCREENSHOT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT &kp LGUI>
                ;
        };

        // degree symbol
        degree: degree {
            compatible = "zmk,behavior-macro";
            label = "DEGREE";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //元, default layer

            label = "moto";
            bindings = <
&hml LALT GRAVE   &kp Q    &kp W            &f_e          &p_r              &kp G        /*||*/     &kp J    &kp L         &kp U          &kp Y        &semi_p   &hms BSPC LBKT
&hml LCTRL EQUAL  &kp A    &hm_c_rs LALT 0  &hms LCTRL S  &hms LSHFT T      &kp D        /*||*/     &kp H    &hms RSHFT N  &hms RCTRL E   &hml LALT I  &kp O     &kp SQT
&hml LSHFT MINUS  &kp Z    &kp X            &kp C         &kp V             &kp B        /*||*/     &kp K    &kp M         &kp COMMA      &kp DOT      &kp FSLH  &key_repeat
                                            &km 3 LGUI    &km 1 DEL         &kp SPACE    /*||*/     &kp RET  &km 2 BSPC    &kp RBKT
            >;
        };

        lower_layer {
            //下, lower

            label = "shota";
            bindings = <
&kp LALT   &kp N1    &kp N2   &kp N3    &kp N4  &kp N5       &kp F1   &kp F2  &kp F3  &kp F4   &kp F5    &kp F6
&kp LCTRL  &kp LGUI  &kp ESC  &trans    &cs     &kp TAB      &kp F7   &kp F8  &kp F9  &kp F10  &kp F11   &kp F12
&kp LSHFT  &kp N6    &kp N7   &kp N8    &kp N9  &kp N0       &trans   &trans  &trans  &degree  &kp BSLH  &trans
                              &kp LGUI  &trans  &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        raise_layer {
            //上, upper

            label = "uey";
            bindings = <
&trans   &trans  &trans      &trans            &trans        &trans        &trans       &trans    &trans    &kp INS    &kp BSPC   &kp DEL
&trans   &trans  &trans      &kp C_VOL_DN      &kp C_VOL_UP  &kp C_MUTE    &kp K_CMENU  &kp LEFT  &kp UP    &kp RIGHT  &kp PG_UP  &screenshot
&trans   &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &trans        &kp PSCRN    &kp HOME  &kp DOWN  &kp END    &kp PG_DN  &kp C_PWR
                             &trans            &trans        &kp SPACE     &kp RET      &trans    &trans
            >;
        };

        bt_layer {
            // bluetooth controls and other PC controls

            label = "blutooth";
            bindings = <
&trans  &kp C_POWER   &kp K_POWER   &trans        &trans        &trans          &trans                &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &bt BT_PRV    &bt BT_NXT    &bt BT_CLR      &kp C_BRIGHTNESS_DEC  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans                &trans  &trans
            >;
        };

//         // id: 4

//         game_layer {
//             // WASD LAYER

//             label = "GAME0";
//             bindings = <
// &kp ESC    &kp TAB     &kp Q  &kp W     &kp E      &kp R    &none  &kp A  &kp P  &kp E  &kp X      &to 0
// &kp N3     &kp LSHIFT  &kp A  &kp S     &kp D      &kp F    &none  &none  &none  &none  &none      &none
// &kp T      &kp LCTRL   &kp Z  &kp X     &kp C      &kp V    &none  &none  &none  &none  &kp PSCRN  &none
//                               &kp LALT  &kp SPACE  &mo 5    &none  &none  &none
//             >;
//         };

//         // id: 5

//         game_layer_2 {
//             // helper layer for numrow etc.

//             label = "GAME1";
//             bindings = <
// &kp N6  &kp N5  &kp N1  &trans  &kp N2  &kp N4    &none  &none  &none  &none  &none  &none
// &kp F1  &trans  &trans  &trans  &trans  &kp G     &none  &none  &none  &none  &none  &none
// &none   &none   &none   &none   &kp Y   &kp V     &none  &none  &none  &none  &none  &none
//                         &trans  &trans  &none     &none  &none  &none
//             >;
//         };
    };
};
